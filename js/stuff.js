// Generated by CoffeeScript 1.4.0
(function() {
  var WhacAMu;

  WhacAMu = (function() {

    function WhacAMu() {
      this.score = 0;
      this.scorePanel = $("#score");
      this.field = $("section.holes");
      this.createHoles();
      this.createHammer();
      this.bindControls();
      this.startGame();
      this.val = 0;
    }

    WhacAMu.prototype.bindControls = function() {
      var self;
      self = this;
      $("#startGame").click(function() {
        return self.startGame();
      });
      $("#pauseGame").click(function() {
        return self.pauseGame();
      });
      return $("#reset").click(function() {
        return self.reset();
      });
    };

    WhacAMu.prototype.changeButtonState = function(btn) {
      $(".btn").removeClass("disabled");
      return $(btn).addClass("disabled");
    };

    WhacAMu.prototype.startGame = function() {
      var self;
      self = this;
      this.gameStarted = true;
      this.muuuu();
      this.randomMu = setInterval(function() {
        return self.muuuu({
          noTrigger: true
        });
      }, 5000);
      return this.changeButtonState("#startGame");
    };

    WhacAMu.prototype.createHoles = function() {
      var i, _results;
      i = 0;
      _results = [];
      while (i < 16) {
        i++;
        _results.push(this.field.append("<div class=\"hole\"></div>"));
      }
      return _results;
    };

    WhacAMu.prototype.getRandom = function(last_muuu) {
      var val;
      val = _.random(0, $(".hole").length - 1);
      while (val === last_muuu) {
        val = _.random(0, $(".hole").length - 1);
      }
      return val;
    };

    WhacAMu.prototype.muuuu = function(options) {
      var mu, self;
      self = this;
      if (this.gameStarted) {
        this.val = this.getRandom(this.val);
        mu = $(".hole").eq(self.val).addClass("out");
        return this.bindWhack(mu, options);
      }
    };

    WhacAMu.prototype.createHammer = function() {
      var self;
      self = this;
      $(window).bind("mousemove", function(e) {
        var inField;
        inField = e.pageY > self.field.position().top && e.pageX > self.field.position().left && e.pageY < (self.field.position().top + self.field.height()) && e.pageX < (self.field.position().left + self.field.width());
        if (inField) {
          return $("#hammer").css({
            "top": e.pageY,
            "left": e.pageX
          });
        }
      });
      return $(window).bind("click", function(e) {
        var inField;
        inField = e.pageY > self.field.position().top && e.pageX > self.field.position().left && e.pageY < (self.field.position().top + self.field.height()) && e.pageX < (self.field.position().left + self.field.width());
        if (inField) {
          $("#hammer").addClass("smash");
          return setTimeout(function() {
            return $("#hammer").removeClass("smash");
          }, 200);
        }
      });
    };

    WhacAMu.prototype.bindWhack = function(mu, options) {
      var newtime, self;
      self = this;
      options = $.extend({}, options);
      newtime = setTimeout(function() {
        if (mu.is(".out")) {
          self.updateScore(-10);
        }
        mu.removeClass("out").unbind("click");
        if (!options.noTrigger) {
          return self.muuuu();
        }
      }, 2000);
      return mu.bind("click", function() {
        mu.removeClass("out").unbind("click");
        if (!options.noTrigger) {
          self.muuuu();
        }
        self.updateScore(+10);
        return clearTimeout(newtime);
      });
    };

    WhacAMu.prototype.updateScore = function(score) {
      this.score = this.score + score;
      return this.scorePanel.html(this.score);
    };

    WhacAMu.prototype.pauseGame = function() {
      var self;
      self = this;
      $(".hole").removeClass("out");
      clearInterval(self.randomMu);
      this.gameStarted = false;
      return this.changeButtonState("#pauseGame");
    };

    WhacAMu.prototype.reset = function() {
      this.updateScore(0 - this.score);
      this.pauseGame();
      return this.changeButtonState("#reset");
    };

    return WhacAMu;

  })();

  jQuery(function() {
    return new WhacAMu;
  });

}).call(this);
