// Generated by CoffeeScript 1.4.0
(function() {
  var WhacAMu;

  WhacAMu = (function() {

    function WhacAMu() {
      var self;
      this.score = 0;
      this.scorePanel = $("#score");
      this.createHoles();
      this.createHammer();
      self = this;
      setInterval(function() {
        return self.comingOut({
          noTrigger: true
        });
      }, 5000);
      this.comingOut();
    }

    WhacAMu.prototype.createHoles = function() {
      var i, _results;
      i = 0;
      _results = [];
      while (i < 16) {
        i++;
        _results.push($("section.holes").append("<div class=\"hole\"></div>"));
      }
      return _results;
    };

    WhacAMu.prototype.comingOut = function(options) {
      var mu, val;
      val = _.random(0, $(".hole").length - 1);
      mu = $(".hole").eq(val).addClass("hello");
      return this.bindWhack(mu, options);
    };

    WhacAMu.prototype.createHammer = function() {
      $(window).bind("mousemove", function(e) {
        return $("#hammer").css({
          "top": e.pageY,
          "left": e.pageX
        });
      });
      return $(window).bind("click", function(e) {
        $("#hammer").addClass("smash");
        return setTimeout(function() {
          return $("#hammer").removeClass("smash");
        }, 200);
      });
    };

    WhacAMu.prototype.bindWhack = function(mu, options) {
      var newtime, self;
      self = this;
      options = $.extend({}, options);
      newtime = setTimeout(function() {
        mu.removeClass("hello").unbind("click");
        if (!options.noTrigger) {
          self.comingOut();
        }
        return self.updateScore(-10);
      }, 2000);
      return mu.bind("click", function() {
        mu.removeClass("hello").unbind("click");
        if (!options.noTrigger) {
          self.comingOut();
        }
        self.updateScore(+10);
        return clearTimeout(newtime);
      });
    };

    WhacAMu.prototype.updateScore = function(score) {
      this.score = this.score + score;
      return this.scorePanel.html(this.score);
    };

    return WhacAMu;

  })();

  jQuery(function() {
    return new WhacAMu;
  });

}).call(this);
